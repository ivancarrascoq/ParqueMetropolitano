# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from __future__ import unicode_literals

from django.db import models


class DjangoMigrations(models.Model):
    app = models.CharField(max_length=255)
    name = models.CharField(max_length=255)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_migrations'


class EmbalseTest(models.Model):
    fecha_reg = models.DateTimeField()
   # fecha = models.DateTimeField(blank=True, null=True)
    fecha = models.CharField(max_length=255)
    temperatura = models.DecimalField(max_digits=4, decimal_places=2, blank=True, null=True)
    humedad = models.DecimalField(max_digits=3, decimal_places=1, blank=True, null=True)
    puntorocio = models.DecimalField(max_digits=4, decimal_places=2, blank=True, null=True)
    viento_vel = models.DecimalField(max_digits=4, decimal_places=1, blank=True, null=True)
    viento_dir = models.IntegerField(blank=True, null=True)
    viento_raf = models.DecimalField(max_digits=4, decimal_places=1, blank=True, null=True)
    radiacion = models.IntegerField(blank=True, null=True)
    par = models.IntegerField(blank=True, null=True)
    lluvia = models.DecimalField(max_digits=6, decimal_places=1, blank=True, null=True)
    presion = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    analogo = models.DecimalField(max_digits=6, decimal_places=4, blank=True, null=True)
    bateria = models.DecimalField(max_digits=4, decimal_places=3, blank=True, null=True)
    esweb = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'embalse_test'


class EstanqueTest(models.Model):
    fecha_reg = models.DateTimeField()
    fecha = models.DateTimeField(blank=True, null=True)
    analogo = models.DecimalField(max_digits=6, decimal_places=4, blank=True, null=True)
    bateria = models.DecimalField(max_digits=4, decimal_places=3, blank=True, null=True)
    esweb = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'estanque_test'

###### tablas por dia:

class NivelEmbalseV(models.Model):
    fecha = models.DateTimeField(primary_key=True)
    nivel_m3 = models.DecimalField(max_digits=6, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'nivel_embalse_v'

class NivelEstanqueV(models.Model):    
    fecha = models.DateTimeField(primary_key=True)      
    nivel_m3 = models.DecimalField(max_digits=6, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'nivel_estanque_v'

class TemperaturaV(models.Model):
    fecha = models.DateTimeField(primary_key=True)        
    temperatura = models.DecimalField(max_digits=4, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'temperatura_v'

class TempMaxV(models.Model):  
    fecha = models.DateTimeField(primary_key=True)
    temperatura = models.DecimalField(max_digits=4, decimal_places=2, blank=True, null=True)    

    class Meta:
        managed = False
        db_table = 'temp_max_v' 

class TempMinV(models.Model):  
    fecha = models.DateTimeField(primary_key=True)
    temperatura = models.DecimalField(max_digits=4, decimal_places=2, blank=True, null=True)    

    class Meta:
        managed = False
        db_table = 'temp_min_v' 

class PresionV(models.Model):
    fecha = models.DateTimeField(primary_key=True)
    presion_nm = models.DecimalField(max_digits=7, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'presion_v'

class HumedadV(models.Model):
    fecha = models.DateTimeField(primary_key=True)
    humedad = models.DecimalField(max_digits=3, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'humedad_v'


class HumMaxV(models.Model):
    fecha = models.DateTimeField(primary_key=True)
    humedad = models.DecimalField(max_digits=3, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hum_max_v'

class HumMinV(models.Model):
    fecha = models.DateTimeField(primary_key=True)
    humedad = models.DecimalField(max_digits=3, decimal_places=1, blank=True, null=True)   

    class Meta:
        managed = False
        db_table = 'hum_min_v'


class RadiacionV(models.Model):
    fecha = models.DateTimeField(primary_key=True)
    radiacion = models.DecimalField(max_digits=3, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'radiacion_v'


class RadMaxV(models.Model):
    fecha = models.DateTimeField(primary_key=True)
    radiacion = models.DecimalField(max_digits=3, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'rad_max_v'

class RadMinV(models.Model):
    fecha = models.DateTimeField(primary_key=True)
    radiacion = models.DecimalField(max_digits=3, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'rad_min_v'
...................................................................................................
